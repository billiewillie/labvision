import { Length } from './css';
export declare const codes: {
    'missing-start': () => string;
    'missing-end': () => string;
    'missing-default-start-bp': () => string;
    'missing-default-end-bp': () => string;
    'non-length-start': (start: string) => string;
    'non-length-end': (end: string) => string;
    'non-length-start-bp': (bp: string) => string;
    'non-length-end-bp': (bp: string) => string;
    'sort-mismatched-bp-units': (key: string) => string;
    'mismatched-bp-units': (start: Length, end: Length) => string;
    'mismatched-bp-val-units': () => string;
    'mismatched-units': (start: Length, end: Length) => string;
    'no-change': (val: Length) => string;
    'no-change-bp': (val: Length) => string;
    'bp-not-found': (key: string, name: string) => string;
    'no-utility': () => string;
    'fails-sc-144': (failingBp: Length) => string;
};
export declare class FluidError extends Error {
    code: keyof typeof codes;
    name: string;
    constructor(code: keyof typeof codes, message: string);
}
export declare function error<C extends keyof typeof codes>(code: C, ...args: Parameters<(typeof codes)[C]>): never;
