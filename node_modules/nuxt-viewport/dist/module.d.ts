import * as _nuxt_schema from '@nuxt/schema';
import { CookieOptions } from 'cookiejs';
import { createViewportManager } from './runtime/manager.ts';

/**
 * Viewport cookie options.
 */
type ViewportCookie = CookieOptions & {
    name?: string;
};
/**
 * Viewport manager instance.
 */
type ViewportManager = ReturnType<typeof createViewportManager>;
/**
 * Viewport options.
 */
type ViewportOptions = {
    /**
     * Breakpoints.
     */
    breakpoints: Record<string, number>;
    /**
     * Cookie options.
     */
    cookie: ViewportCookie;
    /**
     * Default breakpoints based on device type for auto detection.
     *
     * Available devices: "bot", "desktop", "mobile", "tablet", "tv".
     */
    defaultBreakpoints: Record<string, string>;
    /**
     * Fallback breakpoint.
     */
    fallbackBreakpoint: string;
    /**
     * CSS media feature.
     */
    feature: 'minWidth' | 'maxWidth';
};
declare module 'vue/types/vue' {
    interface Vue {
        $viewport: ViewportManager;
    }
}
declare module '#app' {
    interface NuxtApp extends PluginInjection {
    }
}
interface PluginInjection {
    $viewport: ViewportManager;
}
declare module '@vue/runtime-core' {
    interface ComponentCustomProperties extends PluginInjection {
    }
}

type ModuleOptions = ViewportOptions;
declare const _default: _nuxt_schema.NuxtModule<ViewportOptions>;

export { type ModuleOptions, _default as default };
