import { fileURLToPath } from 'url';
import { defineNuxtModule, createResolver, addTemplate, addPlugin, addImports } from '@nuxt/kit';

const name = "nuxt-viewport";
const version = "2.1.5";

const COOKIE_EXPIRES_IN_DAYS = 365;
const DEFAULT_OPTIONS = {
  breakpoints: {
    desktop: 1024,
    desktopMedium: 1280,
    desktopWide: 1600,
    mobile: 320,
    mobileMedium: 375,
    mobileWide: 425,
    tablet: 768
  },
  cookie: {
    expires: COOKIE_EXPIRES_IN_DAYS,
    name: "viewport",
    path: "/",
    sameSite: "Strict",
    secure: true
  },
  defaultBreakpoints: {
    desktop: "desktop",
    mobile: "mobile",
    tablet: "tablet"
  },
  fallbackBreakpoint: "desktop",
  feature: "minWidth"
};

const module = defineNuxtModule({
  meta: {
    configKey: "viewport",
    compatibility: {
      bridge: true
    },
    name,
    version
  },
  setup(options, nuxt) {
    options = {
      ...DEFAULT_OPTIONS,
      ...options,
      cookie: {
        ...DEFAULT_OPTIONS.cookie,
        ...options.cookie
      }
    };
    const { resolve } = createResolver(import.meta.url);
    const runtimeDir = fileURLToPath(new URL("./runtime", import.meta.url));
    nuxt.options.build.transpile.push(runtimeDir);
    nuxt.options.alias["#viewport-options"] = addTemplate({
      filename: "viewport-options.mjs",
      getContents() {
        return `export default ${JSON.stringify(options)}`;
      }
    }).dst;
    addPlugin(resolve(runtimeDir, "plugin.client"));
    addPlugin(resolve(runtimeDir, "plugin.server"));
    addImports({
      as: "useViewport",
      from: resolve(runtimeDir, "composables"),
      name: "useViewport"
    });
  }
});

export { module as default };
